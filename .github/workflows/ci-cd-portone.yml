# Portone 구독 서비스 CI/CD 파이프라인 (GitHub Actions)
name: CI/CD Pipeline

on:                                # 트리거 조건
  push:                            # 코드 푸시 시 실행
    branches: [ main ]             # main 브랜치에 푸시 시
    paths:                         # 특정 경로 변경 시에만 실행
      - 'portone/**'               # portone 폴더 내 변경 시
      - '.github/workflows/ci-cd-portone.yml'  # 워크플로우 파일 자체 변경 시

env:                              # 환경변수 설정
  AWS_REGION: ap-northeast-2      # AWS 리전 (서울)
  ECR_REPOSITORY: portone-backend # ECR 저장소 이름

jobs:                             # 실행할 작업들
  build-and-deploy:               # 빌드 및 배포 작업
    runs-on: ubuntu-latest        # Ubuntu 최신 버전에서 실행
    
    steps:                        # 실행할 단계들
    - name: Checkout code         # 코드 체크아웃
      uses: actions/checkout@v3   # GitHub Actions 체크아웃 액션

    - name: Set up Docker Buildx  # Docker Buildx 설정 (빌드 성능 향상)
      uses: docker/setup-buildx-action@v2  # Docker Buildx 액션

    - name: Configure AWS credentials  # AWS 인증 정보 설정
      uses: aws-actions/configure-aws-credentials@v2  # AWS 인증 액션
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}        # GitHub Secrets에서 AWS 액세스 키
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # GitHub Secrets에서 AWS 시크릿 키
        aws-region: ${{ env.AWS_REGION }}                           # 환경변수에서 AWS 리전 가져오기

    - name: Login to Amazon ECR   # Amazon ECR 로그인
      id: login-ecr               # 액션 ID (다음 단계에서 사용)
      uses: aws-actions/amazon-ecr-login@v1  # ECR 로그인 액션

    - name: Build, tag, and push image to Amazon ECR  # Docker 이미지 빌드 및 ECR 푸시
      env:                        # 환경변수 설정
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  # ECR 레지스트리 URL
        IMAGE_TAG: ${{ github.sha }}                           # Git 커밋 해시를 이미지 태그로 사용
      run: |                     # 실행할 명령어들
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./portone/app  # Docker 이미지 빌드
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG    # 태그된 이미지를 ECR에 푸시
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest  # latest 태그 추가
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest        # latest 이미지를 ECR에 푸시
        
    - name: Update deployment image tag  # 배포 매니페스트 이미지 태그 업데이트
      run: |                     # 실행할 명령어들
        sed -i "s|image:.*|image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}|g" portone/k8s/portone-deployment.yaml  # deployment.yaml의 이미지 태그 변경